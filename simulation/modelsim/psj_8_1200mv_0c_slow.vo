// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "03/22/2024 15:16:26"

// 
// Device: Altera EP4CE6E22C8 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module half_adder (
	A,
	B,
	S,
	C,
	p);
input 	A;
input 	B;
output 	S;
output 	C;
output 	p;

// Design Ports Information
// S	=>  Location: PIN_30,	 I/O Standard: 2.5 V,	 Current Strength: Default
// C	=>  Location: PIN_28,	 I/O Standard: 2.5 V,	 Current Strength: Default
// p	=>  Location: PIN_49,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A	=>  Location: PIN_115,	 I/O Standard: 2.5 V,	 Current Strength: Default
// B	=>  Location: PIN_119,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("psj_8_1200mv_0c_v_slow.sdo");
// synopsys translate_on

wire \S~output_o ;
wire \C~output_o ;
wire \p~output_o ;
wire \B~input_o ;
wire \A~input_o ;
wire \U2~combout ;
wire \U1~combout ;


// Location: IOOBUF_X0_Y8_N16
cycloneive_io_obuf \S~output (
	.i(\U2~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S~output_o ),
	.obar());
// synopsys translate_off
defparam \S~output .bus_hold = "false";
defparam \S~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y9_N9
cycloneive_io_obuf \C~output (
	.i(\U1~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\C~output_o ),
	.obar());
// synopsys translate_off
defparam \C~output .bus_hold = "false";
defparam \C~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X13_Y0_N16
cycloneive_io_obuf \p~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\p~output_o ),
	.obar());
// synopsys translate_off
defparam \p~output .bus_hold = "false";
defparam \p~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X23_Y24_N1
cycloneive_io_ibuf \B~input (
	.i(B),
	.ibar(gnd),
	.o(\B~input_o ));
// synopsys translate_off
defparam \B~input .bus_hold = "false";
defparam \B~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X28_Y24_N22
cycloneive_io_ibuf \A~input (
	.i(A),
	.ibar(gnd),
	.o(\A~input_o ));
// synopsys translate_off
defparam \A~input .bus_hold = "false";
defparam \A~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y9_N16
cycloneive_lcell_comb U2(
// Equation(s):
// \U2~combout  = \B~input_o  $ (\A~input_o )

	.dataa(\B~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(\A~input_o ),
	.cin(gnd),
	.combout(\U2~combout ),
	.cout());
// synopsys translate_off
defparam U2.lut_mask = 16'h55AA;
defparam U2.sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y9_N2
cycloneive_lcell_comb U1(
// Equation(s):
// \U1~combout  = (\B~input_o  & \A~input_o )

	.dataa(\B~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(\A~input_o ),
	.cin(gnd),
	.combout(\U1~combout ),
	.cout());
// synopsys translate_off
defparam U1.lut_mask = 16'hAA00;
defparam U1.sum_lutc_input = "datac";
// synopsys translate_on

assign S = \S~output_o ;

assign C = \C~output_o ;

assign p = \p~output_o ;

endmodule
